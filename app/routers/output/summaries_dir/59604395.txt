the assumed computationally difficulty of factoring large integers forms the basis of security for rsa public - key cryptography , which specifically relies on products of two large primes or semi - primes . the best - known factoring algorithms for classical computers run in sub - exponential time . since integer factorization is in np , one can reduce this problem to any np - hard problem , such as boolean satisfiability ( sat ) . while reducing factoring to sat has proved to be useful for studying sat solvers , attempting to factor large integers via such a reduction has not been found to be successful . shor 's quantum factoring algorithm factors any integer in polynomial time , although large - scale fault - tolerant quantum computers capable of implementing shor 's algorithm are not yet available , so relevant benchmarking experiments for factoring via shor 's algorithm are not yet possible . in recent years , however , several authors have attempted factorizations with the help of quantum processors via reductions to np - hard problems . while this approach may shed some light on some algorithmic approaches for quantum solutions to np - hard problems , in this paper we study and question the practical effectiveness of this approach for factoring large numbers . we find no evidence that this is a viable path toward factoring large numbers , even for scalable fault - tolerant quantum computers , as well as for various quantum annealing or other special purpose quantum hardware .