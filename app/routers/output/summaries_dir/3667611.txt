recent developments in quantum hardware indicate that systems featuring more than 50 physical qubits are within reach . at this scale , classical simulation will no longer be feasible and there is a possibility that such quantum devices may outperform even classical supercomputers at certain tasks . with the rapid growth of qubit numbers and coherence times comes the increasingly difficult challenge of quantum program compilation . this entails the translation of a high - level description of a quantum algorithm to hardware - specific low - level operations which can be carried out by the quantum device . some parts of the calculation may still be performed manually due to the lack of efficient methods . this , in turn , may lead to a design gap , which will prevent the programming of a quantum computer . in this paper , we discuss the challenges in fully - automatic quantum compilation . we motivate directions for future research to tackle these challenges . yet , with the algorithms and approaches that exist today , we demonstrate how to automatically perform the quantum programming flow from algorithm to a physical quantum computer for a simple algorithmic benchmark , namely the hidden shift problem . we present and use two tool flows which invoke revkit . one which is based on projectq and which targets the ibm quantum experience or a local simulator , and one which is based on microsoft 's quantum programming language q$\#$.