this paper presents the definition and implementation of a quantum computer architecture to enable creating a new computational device - a quantum computer as an accelerator . in this paper , we present explicitly the idea of a quantum accelerator which contains the full stack of the layers of an accelerator . such a stack starts at the highest level describing the target application of the accelerator . the next layer abstracts the quantum logic outlining the algorithm that is to be executed on the quantum accelerator . in our case , the logic is expressed in the universal quantum - classical hybrid computation language developed in the group , called openql , which visualised the quantum processor as a computational accelerator . the openql compiler translates the program to a common assembly language , called cqasm , which can be executed on a quantum simulator . the cqasm represents the instruction set that can be executed by the micro - architecture implemented in the quantum accelerator . in a subsequent step , the compiler can convert the cqasm to generate the eqasm , which is executable on a particular experimental device incorporating the platform - specific parameters . this way , we are able to distinguish clearly the experimental research towards better qubits , and the industrial and societal applications that need to be developed and executed on a quantum device . the first case offers experimental physicists with a full - stack experimental platform using realistic qubits with decoherence and error - rates while the second case offers perfect qubits to the quantum application developer , where there is no decoherence nor error - rates . we conclude the paper by explicitly presenting three examples of full - stack quantum accelerators , for an experimental superconducting processor , for quantum accelerated genome sequencing and for near - term generic optimisation problems based on quantum heuristic approaches .