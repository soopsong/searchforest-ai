recent developments in engineering and algorithms have made real - world applications in quantum computing possible in the near future . existing quantum programming languages and compilers use a quantum assembly language composed of 1- and 2-qubit ( quantum bit ) gates . quantum compiler frameworks translate this quantum assembly to electric signals ( called control pulses ) that implement the specified computation on specific physical devices . however , there is a mismatch between the operations defined by the 1- and 2-qubit logical isa and their underlying physical implementation , so the current practice of directly translating logical instructions into control pulses results in inefficient , high - latency programs . to address this inefficiency , we propose a universal quantum compilation methodology that aggregates multiple logical operations into larger units that manipulate up to 10 qubits at a time . our methodology then optimizes these aggregates by ( 1 ) finding commutative intermediate operations that result in more efficient schedules and ( 2 ) creating custom control pulses optimized for the aggregate ( instead of individual 1- and 2-qubit operations ) . compared to the standard gate - based compilation , the proposed approach realizes a deeper vertical integration of high - level quantum software and low - level , physical quantum hardware . we evaluate our approach on important near - term quantum applications on simulations of superconducting quantum architectures . our proposed approach provides a mean speedup of $ 5\times$ , with a maximum of $ 10\times$. because latency directly affects the feasibility of quantum computation , our results not only improve performance but also have the potential to enable quantum computation sooner than otherwise possible .