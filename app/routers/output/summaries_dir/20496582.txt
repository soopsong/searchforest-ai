topological quantum computing has recently proven itself to be a powerful computational model when constructing viable architectures for large scale computation . the topological model is constructed from the foundation of a error correction code , required to correct for inevitable hardware faults that will exist for a large scale quantum device . it is also a measurement based model of quantum computation , meaning that the quantum hardware is responsible only for the construction of a large , computationally universal quantum state . this quantum state is then strategically consumed , allowing for the realisation of a fully error corrected quantum algorithm . the number of physical qubits needed by the quantum hardware and the amount of time required to implement an algorithm is dictated by the manner in which this universal quantum state is consumed . in this paper we examine the problem of algorithmic optimisation in the topological lattice and introduce the required elements that will be needed when designing a classical software package to compile and implement a large scale algorithm on a topological quantum computer .