we review some of the features of the projectq software framework and quantify their impact on the resulting circuits . the concise high - level language facilitates implementing even complex algorithms in a very time - efficient manner while , at the same time , providing the compiler with additional information for optimization through code annotation - so - called meta - instructions . we investigate the impact of these annotations for the example of shor 's algorithm in terms of logical gate counts . furthermore , we analyze the effect of different intermediate gate sets for optimization and how the dimensions of the resulting circuit depend on a smart choice thereof . finally , we demonstrate the benefits of a modular compilation framework by implementing mapping procedures for one- and two - dimensional nearest neighbor architectures which we then compare in terms of overhead for different problem sizes .