shor 's quantum algorithm for discrete logarithms applied to elliptic curve groups forms the basis of a"quantum attack"of elliptic curve cryptosystems . to implement this algorithm on a quantum computer requires the efficient implementation of the elliptic curve group operation . such an implementation requires we be able to compute inverses in the underlying field . in [ pz03 ] , proos and zalka show how to implement the extended euclidean algorithm to compute inverses in the prime field gf(p ) . they employ a number of optimizations to achieve a running time of o(n^2 ) , and a space - requirement of o(n ) qubits ( there are some trade - offs that they make , sacrificing a few extra qubits to reduce running - time ) . in practice , elliptic curve cryptosystems often use curves over the binary field gf(2^m ) . in this paper , we show how to implement the extended euclidean algorithm for polynomials to compute inverses in gf(2^m ) . working under the assumption that qubits will be an ` expensive ' resource in realistic implementations , we optimize specifically to reduce the qubit space requirement , while keeping the running - time polynomial . our implementation here differs from that in [ pz03 ] for gf(p ) , and we are able to take advantage of some properties of the binary field gf(2^m ) . we also optimize the overall qubit space requirement for computing the group operation for elliptic curves over gf(2^m ) by decomposing the group operation to make it"piecewise reversible"(similar to what is done in [ pz03 ] for curves over gf(p ) ) .