noisy , intermediate - scale quantum ( nisq ) systems are expected to have a few hundred qubits , minimal or no error correction , limited connectivity and limits on the number of gates that can be performed within the short coherence window of the machine . the past decade 's research on quantum programming languages and compilers is directed towards large systems with thousands of qubits . for near term quantum systems , it is crucial to design tool flows which make efficient use of the hardware resources without sacrificing the ease and portability of a high - level programming environment . in this paper , we present a compiler for the scaffold quantum programming language in which aggressive optimization specifically targets nisq machines with hundreds of qubits . our compiler extracts gates from a scaffold program , and formulates a constrained optimization problem which considers both program characteristics and machine constraints . using the z3 smt solver , the compiler maps program qubits to hardware qubits , schedules gates , and inserts cnot routing operations while optimizing the overall execution time . the output of the optimization is used to produce target code in the openqasm language , which can be executed on existing quantum hardware such as the 16-qubit ibm machine . using real and synthetic benchmarks , we show that it is feasible to synthesize near - optimal compiled code for current and small nisq systems . for large programs and machine sizes , the smt optimization approach can be used to synthesize compiled code that is guaranteed to finish within the coherence window of the machine .