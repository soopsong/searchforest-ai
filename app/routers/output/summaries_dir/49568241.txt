quantum algorithms to solve practical problems in quantum chemistry , materials science , and matrix inversion often involve a significant amount of arithmetic operations which act on a superposition of inputs . these have to be compiled to a set of fault - tolerant low - level operations and throughout this translation process , the compiler aims to come close to the pareto - optimal front between the number of required qubits and the depth of the resulting circuit . in this paper , we provide quantum circuits for floating - point addition and multiplication which we find using two vastly different approaches . the first approach is to automatically generate circuits from classical verilog implementations using synthesis tools and the second is to generate and optimize these circuits by hand . we compare our two approaches and provide evidence that floating - point arithmetic is a viable candidate for use in quantum computing , at least for typical scientific applications , where addition operations usually do not dominate the computation . all our circuits were constructed and tested using the software tools liq$ui|\rangle{}$ and revkit .