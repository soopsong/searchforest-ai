we present a detailed analysis of the impact on modular exponentiation of architectural features and possible concurrent gate execution . various arithmetic algorithms are evaluated for execution time , potential concurrency , and space tradeoffs . we find that , to exponentiate an n - bit number , for storage space 100n ( twenty times the minimum 5n ) , we can execute modular exponentiation two hundred to seven hundred times faster than optimized versions of the basic algorithms , depending on architecture , for n=128 . addition on a neighbor - only architecture is limited to o(n ) time when non - neighbor architectures can reach o(log n ) , demonstrating that physical characteristics of a computing device have an important impact on both real - world running time and asymptotic behavior . our results will help guide experimental implementations of quantum algorithms and devices .